{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/owner-category/owner-category.component.html","webpack:///./src/app/components/owner-category/owner-category.component.scss","webpack:///./src/app/components/owner-category/owner-category.component.ts","webpack:///./src/app/components/pet/pet.component.html","webpack:///./src/app/components/pet/pet.component.scss","webpack:///./src/app/components/pet/pet.component.ts","webpack:///./src/app/mappers/owner.mapper.ts","webpack:///./src/app/models/gender.enum.ts","webpack:///./src/app/models/owner.ts","webpack:///./src/app/models/pet-type.enum.ts","webpack:///./src/app/models/pet.ts","webpack:///./src/app/pipes/filter-pets.ts","webpack:///./src/app/services/owners-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"app\\\">\\n    <!-- heading for accessibility -->\\n    <h1 class=\\\"visually-hidden\\\">Feline Demo</h1>\\n\\n    <!-- loading messages -->\\n    <div class=\\\"app__loading-msg\\\" *ngIf=!isOwnerDataLoaded>\\n        <span *ngIf=!isOwnerDataLoadError>Loading pet owners...</span>\\n        <span *ngIf=isOwnerDataLoadError>Error loading pet owners :(</span>\\n    </div>\\n\\n    <!-- section heading for accessibility -->\\n    <h2 class=\\\"visually-hidden\\\">Lists of pets</h2>\\n\\n    <!-- owner category: container component for categorised owners' pets -->\\n    <app-owner-category [owners]=\\\"owners\\\" [genderCategory]=\\\"'male'\\\"></app-owner-category>\\n    <app-owner-category [owners]=\\\"owners\\\" [genderCategory]=\\\"'female'\\\"></app-owner-category>\\n\\n    <!-- for accessibility screen reader announcements -->\\n    <div class=\\\"visually-hidden\\\" aria-live=\\\"polite\\\" [innerHTML]=announcementContent></div>\\n</div>\\n\"","module.exports = \".app {\\n  max-width: 1350px;\\n  margin: 0 auto;\\n  padding: 30px 15px;\\n  overflow: hidden; }\\n  .app__loading-msg {\\n    padding: 2em;\\n    font-size: 18px;\\n    font-weight: 500;\\n    text-align: center; }\\n\"","import { Component, OnInit, Output } from '@angular/core';\nimport { OwnersApiService } from './services/owners-api.service';\nimport { Owner } from './models/owner';\nimport { OwnerMapper } from './mappers/owner.mapper';\n\n@Component({\n  selector: 'app-feline-demo',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  // remote owner data loading states\n  @Output() isOwnerDataLoaded = false;\n  @Output() isOwnerDataLoadError = false;\n\n  // owners array mapped from remote API data\n  @Output() owners: Array<Owner> = [];\n\n  // for accessibility live announcements\n  announcementContent = '';\n\n  constructor(private ownersApi: OwnersApiService) {\n  }\n\n  ngOnInit() {\n    this._loadRemoteOwners();\n  }\n\n  /**\n   * _loadRemoteOwners - load remote owners from API service\n   *\n   * @private\n   * @return {void}\n   */\n  private _loadRemoteOwners() {\n    this._makeAnnouncement('loading pet owners in progress');\n    this.ownersApi.getOwners()\n      .subscribe(\n        (data: any[]) => {\n          this.isOwnerDataLoadError = false;\n          this.owners = OwnerMapper.transform(data);\n\n          const ownersCount = this.owners.length;\n          this._makeAnnouncement(`${ownersCount} owner${ownersCount > 1 ? 's' : ''} loaded and displayed`);\n        },\n        errorResponse => {\n          this.isOwnerDataLoadError = true;\n          this._makeAnnouncement('error loading pet owners');\n        },\n        () => {\n          this.isOwnerDataLoaded = true;\n          this._makeAnnouncement('loading pet owners complete');\n        });\n  }\n\n  /**\n   * _makeAnnouncement - method to update aria-live property value\n   *\n   * @param {string} text\n   * @private\n   * @return {void}\n   */\n  private _makeAnnouncement(text = '') {\n    this.announcementContent = text;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { OwnerCategoryComponent } from './components/owner-category/owner-category.component';\nimport { PetComponent } from './components/pet/pet.component';\nimport { FilterPetsPipe } from './pipes/filter-pets';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OwnerCategoryComponent,\n    PetComponent,\n    FilterPetsPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [], // use '@Injectable providedIn' now\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"owner-category\\\" [attr.data-gender]=targetGender.toString().toLowerCase()>\\n    <h3 class=\\\"owner-category__title\\\">\\n        <span [innerHTML]=targetGender.toString().toLowerCase()></span>\\n        <span class=\\\"visually-hidden\\\"> owners' pets</span>\\n    </h3>\\n\\n    <!-- loading success: show owners feline list -->\\n    <ol class=\\\"owner-category__list list--unstyled\\\">\\n\\n        <!-- owner felines -->\\n        <li *ngFor=\\\"let pet of targetOwnersPets | filterPets: 'cat'; let i = index\\\"\\n            class=\\\"owner-category__item\\\"\\n            id=\\\"{{targetGender.toString().toLocaleLowerCase()}}-gender-owners-pet-{{i + 1}}\\\">\\n\\n            <!-- render pet component -->\\n            <app-pet [pet]=\\\"pet\\\"></app-pet>\\n        </li>\\n    </ol>\\n</div>\\n\"","module.exports = \".owner-category {\\n  display: block;\\n  width: auto;\\n  text-align: center; }\\n  .owner-category[data-gender='male'] .owner-category__title {\\n    color: #147EFB; }\\n  .owner-category[data-gender='female'] .owner-category__title {\\n    color: #FC3158; }\\n  .owner-category__title {\\n    font-size: 40px;\\n    text-transform: capitalize;\\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.22);\\n    letter-spacing: 4px; }\\n  .owner-category__list {\\n    text-align: inherit;\\n    counter-reset: listCounter;\\n    margin-top: 20px;\\n    overflow: hidden; }\\n  .owner-category__item {\\n    position: relative;\\n    display: -ms-inline-flexbox;\\n    display: inline-flex;\\n    -ms-flex-direction: column;\\n        flex-direction: column;\\n    -ms-flex-pack: justify;\\n        justify-content: space-between;\\n    counter-increment: listCounter;\\n    background: white;\\n    text-align: center;\\n    box-sizing: border-box;\\n    border-radius: 56px;\\n    border-bottom: 4px solid rgba(0, 0, 0, 0.12);\\n    margin: 16px 0;\\n    padding: 32px 40px;\\n    width: calc(100% - 32px);\\n    height: auto;\\n    overflow: hidden; }\\n  .owner-category__item::before {\\n      content: counter(listCounter);\\n      background: #eee;\\n      color: #aaa;\\n      display: block;\\n      position: absolute;\\n      top: 28px;\\n      left: 28px;\\n      width: 36px;\\n      height: 36px;\\n      font-size: 18px;\\n      font-weight: bold;\\n      line-height: 30px;\\n      border-radius: 50%;\\n      border-top: 4px solid rgba(0, 0, 0, 0.12);\\n      box-sizing: border-box;\\n      overflow: hidden; }\\n  @media screen and (min-width: 680px) {\\n      .owner-category__item {\\n        width: calc(50% - 32px);\\n        margin: 16px; } }\\n  @media screen and (min-width: 1170px) {\\n      .owner-category__item {\\n        width: calc(33.33% - 32px); } }\\n\"","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Owner } from '../../models/owner';\nimport { Gender } from '../../models/gender.enum';\nimport { Pet } from '../../models/pet';\n\n@Component({\n  selector: 'app-owner-category',\n  templateUrl: './owner-category.component.html',\n  styleUrls: ['./owner-category.component.scss']\n})\nexport class OwnerCategoryComponent implements OnInit, OnChanges {\n\n  @Input() owners: Array<Owner> = [];\n  @Input() genderCategory = 'n/a';\n\n  targetGender = Gender.UNKNOWN;\n  targetOwnersPets: Array<Pet> = [];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.targetGender = Gender.getGenderFromText(this.genderCategory);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // if owners input data is updated\n    if (changes.owners !== undefined) {\n      this.updateTargetOwners();\n    }\n  }\n\n  /**\n   * updateTargetOwners - returns a list of owners based on gender\n   */\n  updateTargetOwners() {\n    const ownerDataList = this.owners;\n    let targetOwners: Array<Owner> = [];\n\n    // if no target gender specified, output all owners\n    if (this.targetGender === Gender.UNKNOWN) {\n      targetOwners = [...ownerDataList];\n    } else {\n      // otherwise find matching owners with target gender\n      const ownerDataLength = ownerDataList.length;\n\n      for (let i = 0; i < ownerDataLength; i++) {\n        const owner = ownerDataList[i];\n        const ownerGender = Gender.getGenderFromText(owner.gender);\n        if (ownerGender === this.targetGender) {\n          targetOwners.push(owner);\n        }\n      }\n    }\n\n    this.targetOwnersPets = this.getPetsFromTargetOwners(targetOwners);\n  }\n\n  /**\n   * getPetsFromTargetOwners - get sorted pets from target owner list\n   * @param targetOwners\n   */\n  getPetsFromTargetOwners(targetOwners: Array<Owner>) {\n    const targetOwnersPets = targetOwners.reduce(\n      (accumulator: Array<Pet>, currentValue: Owner): Array<Pet> => {\n        return accumulator.concat(currentValue.pets);\n      }, []);\n\n    return targetOwnersPets.sort();\n  }\n}\n","module.exports = \"<div class=\\\"pet\\\">\\n    <h4 class=\\\"pet__title\\\" [innerHTML]=name></h4>\\n    <p class=\\\"pet__type\\\" [innerHTML]=typeText [attr.aria-hidden]=\\\"true\\\"></p>\\n</div>\\n\"","module.exports = \".pet__title {\\n  color: #53D769;\\n  text-align: center;\\n  font-size: 28px;\\n  line-height: 1.25;\\n  margin: 0;\\n  text-transform: uppercase;\\n  text-shadow: 0 2px 1px #338333; }\\n  .pet__title::before, .pet__title::after {\\n    content: ' ~ '; }\\n  .pet__type {\\n  display: block;\\n  width: auto;\\n  height: auto;\\n  margin: 16px auto 0 auto;\\n  font-size: 48px;\\n  line-height: 1; }\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Pet } from '../../models/pet';\nimport { PetType } from '../../models/pet-type.enum';\n\n@Component({\n  selector: 'app-pet',\n  templateUrl: './pet.component.html',\n  styleUrls: ['./pet.component.scss']\n})\nexport class PetComponent implements OnInit {\n\n  @Input() pet: Pet = null;\n\n  name = '';\n  typeText = '';\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    // update internal component vars from Pet\n    if (this.pet !== null) {\n      this.name = this.pet.name;\n      this.typeText = PetType.getPetTypeEmoji(this.pet.type);\n    }\n  }\n}\n","import { Owner } from '../models/owner';\nimport { Pet } from '../models/pet';\nimport { Gender } from '../models/gender.enum';\nimport { PetType } from '../models/pet-type.enum';\n\nexport class OwnerMapper {\n\n  /**\n   * transform - map owner response data object list to list of Owner\n   *\n   * @returns {Array<Owner>}\n   */\n  static transform(data: any[]) {\n    const ownersData = [...data];\n    const dataLength = ownersData.length;\n    const owners: Array<Owner> = [];\n\n    for (let i = 0; i < dataLength; i++) {\n      const {name, gender, age, pets} = ownersData[i];\n      const petsData = Array.isArray(pets) ? pets : [];\n      const ownerPets = [];\n      const petsDataLength = petsData.length;\n\n      for (let j = 0; j < petsDataLength; j++) {\n        const petData = petsData[j];\n        ownerPets.push(new Pet(petData.name, PetType.getPetTypeFromText(petData.type)));\n      }\n\n      owners.push(new Owner(name, Gender.getGenderFromText(gender), age, ownerPets));\n    }\n\n    return owners;\n  }\n}\n","/**\n * Gender - gender for owner, or pets\n */\nenum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n  UNKNOWN = 'UNKNOWN'\n}\n\nnamespace Gender {\n\n  /**\n   * getGenderFromText - returns gender value from text\n   *\n   * @param {String} text  gender data text\n   * @returns {string}\n   */\n  export function getGenderFromText(text: string) {\n    const genderText = text.toUpperCase();\n\n    switch (genderText) {\n      case Gender.MALE:\n      case Gender.FEMALE:\n        return genderText;\n      default:\n        return Gender.UNKNOWN;\n    }\n  }\n}\n\nexport { Gender };\n","import { Gender } from './gender.enum';\nimport { Pet } from './pet';\n\nexport class Owner {\n  name: string;\n  gender: Gender;\n  age: number;\n  pets: Array<Pet>;\n\n  constructor(name: string, gender: Gender, age: number, pets: Array<Pet>) {\n    this.name = name;\n    this.gender = gender;\n    this.age = age;\n    this.pets = pets;\n  }\n}\n","/**\n * PetType - pet biological type\n */\nenum PetType {\n  DOG = 'DOG',\n  CAT = 'CAT',\n  FISH = 'FISH',\n  UNKNOWN = 'UNKNOWN',\n}\n\nnamespace PetType {\n\n  /**\n   * getPetTypeFromText - returns pet type value from text\n   *\n   * @param {String} text  pet type data text\n   * @returns {string}\n   */\n  export function getPetTypeFromText(text: string) {\n    const petTypeText = text.toUpperCase();\n\n    switch (petTypeText) {\n      case PetType.DOG:\n      case PetType.CAT:\n      case PetType.FISH:\n        return petTypeText;\n      default:\n        return PetType.UNKNOWN;\n    }\n  }\n\n  /**\n   * getPetTypeEmoji - returns pet type emoji text\n   *\n   * @param {PetType} petType  pet type data\n   * @returns {string}\n   */\n  export function getPetTypeEmoji(petType: PetType) {\n    switch (petType) {\n      case PetType.DOG:\n        return '🐶';\n      case PetType.CAT:\n        return '🐱';\n      case PetType.FISH:\n        return '🐟';\n      default:\n        return '👽';\n    }\n  }\n}\n\nexport { PetType };\n","import { PetType } from './pet-type.enum';\n\nexport class Pet {\n  name: string;\n  type: PetType;\n\n  constructor(name: string, type: PetType) {\n    this.name = name;\n    this.type = type;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Pet } from '../models/pet';\nimport { PetType } from '../models/pet-type.enum';\n\n@Pipe({\n  name: 'filterPets',\n  pure: false\n})\n\nexport class FilterPetsPipe implements PipeTransform {\n  transform(array: Array<Pet>, petTypeText: string = ''): Array<Pet> {\n    let result;\n    const petType = PetType.getPetTypeFromText(petTypeText);\n\n    if (petType === PetType.UNKNOWN) {\n      if (petTypeText === '') {\n        // return all pets on empty filter\n        result = [...array];\n      } else {\n        // return nothing is filter pet type is unknown\n        return [];\n      }\n    }\n\n    // filter pets based on filter pet type text\n    if (petTypeText !== '') {\n      result = array.filter((pet: Pet) => {\n        return pet.type === petType;\n      });\n    }\n\n    // default sort pets based on name alphabetically\n    result.sort((petA: Pet, petB: Pet) => {\n      return petA.name >= petB.name ? 1 : -1;\n    });\n\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnersApiService {\n\n  // endpoint constant\n  readonly GET_OWNERS_ENDPOINT = 'assets/owners.json';\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public getOwners(): Observable<any> {\n    return this.httpClient.get(this.GET_OWNERS_ENDPOINT);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}